# auto-generated by grc.converter

id: grnet_udp_sink
label: UDP Sink (grnet)
category: '[GrNet Networking Tools]'

parameters:
-   id: type
    label: Input Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: addr
    label: Destination IP Address
    dtype: string
    default: 127.0.0.1
-   id: port
    label: Destination Port
    dtype: int
    default: '2000'
-   id: header
    label: Header
    dtype: enum
    options: ['0', '1', '2', '4']
    option_labels: [None, 64-bit Sequence Number, Sequence + 16-bit data size, CHDR
            (64-bit)]
-   id: payloadsize
    label: UDP Packet Data Size
    dtype: int
    default: '1472'
-   id: send_eof
    label: Send Null Packet as EOF
    dtype: enum
    options: ['False', 'True']
    option_labels: ['No', 'Yes']

inputs:
-   domain: stream
    dtype: ${ type }
asserts:
- ${ port > 0 }
- ${ payloadsize > 0 }

templates:
    imports: import grnet
    make: grnet.udp_sink(${type.size}, 1, ${addr}, ${port},${header},${payloadsize},${send_eof})

documentation: "This block provides basic UDP data transmission capabilities with\
    \ a few additional features for processing in custom receiving applications. \
    \ \nA header can be added in various formats for tracking.  For instance all headers\
    \ also provide a sequence number that can be used to identify gaps in packets.\
    \  \nNote that payload size impacts the overall size of a single UDP packet. \
    \ For a normal network, a payload size of 1472 (1500-28 for UDP headers) represents\
    \ the max size for a standard UDP packet.  \nFor a Jumbo frames 8972 can be used\
    \ (9000-28).  Be careful adjusting this parameter as you could inadvertently cause\
    \ unnecessary packet fragmentation and reconstruction."

file_format: 1

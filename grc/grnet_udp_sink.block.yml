# auto-generated by grc.converter

id: grnet_udp_sink
label: UDP Sink (grnet)
category: '[GrNet Networking Tools]'

parameters:
-   id: type
    label: Input Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: addr
    label: Destination IP Address
    dtype: string
    default: 127.0.0.1
-   id: port
    label: Destination Port
    dtype: int
    default: '2000'
-   id: header
    label: Header/CRC
    dtype: enum
    options: ['0', '1', '2', '3']
    option_labels: [None, 32-bit Sequence Number, Sequence + 32-bit data size, 'Sequence,data
            size, and trailing crc32 checksum']
-   id: vlen
    label: Vec Length
    dtype: int
    default: '1'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: payloadsize
    label: Payload Size
    dtype: int
    default: '1472'
-   id: send_eof
    label: Send Null Packet as EOF
    dtype: enum
    options: ['True', 'False']
    option_labels: ['Yes', 'No']

inputs:
-   domain: stream
    dtype: ${ type }
    vlen: ${ vlen }
asserts:
- ${ vlen > 0 }
- ${ port > 0 }
- ${ payloadsize > 0 }

templates:
    imports: import grnet
    make: grnet.udp_sink(${type.size}, ${vlen}, ${addr}, ${port},${header},${payloadsize},${send_eof})

documentation: "This block provides basic UDP data transmission capabilities with\
    \ a few additional features for processing in custom receiving applications. \
    \ \nA header can be added that provides 4 0xFF bytes to form a sync word along\
    \ with a packet sequence number for detecting out-of-sequence \npackets as well\
    \ as a packet size.  A 64-bit CRC field based on zlib's crc32 function can also\
    \ be added to the end of the packets for integrity checking.  \nNote that payload\
    \ size impacts the overall size of a single UDP packet.  For a normal network,\
    \ a payload size of 1472 (1500-28 for UDP headers) represents the max size for\
    \ a standard UDP packet.  \nFor a Jumbo frames 8972 can be used (9000-28).  Be\
    \ careful adjusting this parameter as you could inadvertently cause unnecessary\
    \ packet fragmentation and reconstruction."

file_format: 1
